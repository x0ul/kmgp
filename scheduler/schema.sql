-- Initialize the database.
-- Drop any existing data and create empty tables.

DROP TABLE IF EXISTS Users;
DROP TABLE IF EXISTS UserShowsJoin;
DROP TABLE IF EXISTS Shows;
DROP TABLE IF EXISTS Episodes;

CREATE TABLE Users (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  email TEXT UNIQUE NOT NULL,
  password TEXT NOT NULL,
  superuser INTEGER NOT NULL DEFAULT 0,
  modified_by INTEGER NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (modified_by) REFERENCES Users (id)
);

CREATE TABLE UserShowsJoin (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  user_id INTEGER NOT NULL,
  show_id INTEGER NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES Users (id),
  FOREIGN KEY (show_id) REFERENCES Shows (id)
);

CREATE TABLE Shows (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  title TEXT NOT NULL,
  description TEXT NOT NULL,
  created_by INTEGER NOT NULL,
  updated_by INTEGER NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (created_by) REFERENCES Users (id),
  FOREIGN KEY (updated_by) REFERENCES Users (id)
);

CREATE TABLE Episodes (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  show_id INTEGER NOT NULL,
  title TEXT NOT NULL,
  air_date TIMESTAMP NOT NULL,
  url TEXT NOT NULL,
  description TEXT NOT NULL,
  created_by INTEGER NOT NULL,
  updated_by INTEGER NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (show_id) REFERENCES Shows (id),
  FOREIGN KEY (created_by) REFERENCES Users (id),
  FOREIGN KEY (updated_by) REFERENCES Users (id)
);
